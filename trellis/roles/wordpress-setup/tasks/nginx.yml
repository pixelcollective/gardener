---
- name: Copy SSL cert
  copy:
    src: "{{ item.value.ssl.cert }}"
    dest: "{{ nginx_ssl_path }}/{{ item.value.ssl.cert | basename }}"
    mode: 0640
  with_dict: "{{ wordpress_sites }}"
  when: ssl_enabled and item.value.ssl.cert is defined
  notify: reload nginx

- name: Copy SSL key
  copy:
    src: "{{ item.value.ssl.key }}"
    dest: "{{ nginx_ssl_path }}/{{ item.value.ssl.key | basename }}"
    mode: 0600
  with_dict: "{{ wordpress_sites }}"
  when: ssl_enabled and item.value.ssl.key is defined
  notify: reload nginx

- import_tasks: "{{ playbook_dir }}/roles/common/tasks/disable_challenge_sites.yml"

- name: Create Nginx available sites
  template:
    src: "{{ item.src }}"
    dest: "{{ nginx_path }}/sites-available/{{ item.src | basename | regex_replace('.j2$', '') }}"
  with_items: "{{ nginx_sites_confs }}"
  when: item.enabled | default(true)
  notify: reload nginx
  tags: nginx-sites

- name: Enable or disable Nginx sites
  file:
    path: "{{ nginx_path }}/sites-enabled/{{ item.src | basename | regex_replace('.j2$', '') }}"
    src: "{{ nginx_path }}/sites-available/{{ item.src | basename | regex_replace('.j2$', '') }}"
    state: "{{ item.enabled | default(true) | ternary('link', 'absent') }}"
    force: yes
  with_items: "{{ nginx_sites_confs }}"
  notify: reload nginx
  tags: nginx-sites

- name: Create Nginx conf for challenges location
  template:
    src: "{{ playbook_dir }}/roles/letsencrypt/templates/acme-challenge-location.conf.j2"
    dest: "{{ nginx_path }}/acme-challenge-location.conf"
  notify: reload nginx

- name: Create WordPress configuration for Nginx
  template:
    src: "{{ item.value.nginx_wordpress_site_conf | default(nginx_wordpress_site_conf) }}"
    dest: "{{ nginx_path }}/sites-available/{{ item.key }}.conf"
  with_dict: "{{ wordpress_sites }}"
  notify: reload nginx
  tags: nginx-includes

- name: Enable WordPress site
  file:
    src: "{{ nginx_path }}/sites-available/{{ item.key }}.conf"
    dest: "{{ nginx_path }}/sites-enabled/{{ item.key }}.conf"
    owner: root
    group: root
    state: link
  with_dict: "{{ wordpress_sites }}"
  notify: reload nginx
